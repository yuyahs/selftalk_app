version: 2.1 # 2.1 を使うと Orb や他の機能を使用することができます。

# 設定で使用する Orb を宣言します。
# Orb に関する詳細は、https://circleci.com/docs/ja/2.0/orb-intro/をご覧ください。
orbs:
  ruby: circleci/ruby@1.1.2
  node: circleci/node@2

jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.2-node # カスタマイズされた CircleCI Docker イメージを使用します。
        auth:
          username: yuyahs
          password: "@lasvegas216"  # コンテキスト/ プロジェクト UI の環境変数を参照します。
    working_directory: ~/selftalk_app
    steps:
      - checkout:
         path: ~/selftalk_app   # Git コードをプルダウンします。
      - ruby/install-deps # Ruby Orb を使って依存関係をインストールします。
      # Node Orb を使ってパッケージをインストールします。
      # Yarn の使用および 依存関係のキャッシュに yarn.lock の使用を指定します。
      # 詳細は、 https://circleci.com/docs/2.0/caching/　を参照してください。

  test:  # "test"という名前の２つ目のジョブです。
    # テストを高速化するために「並列ジョブコンテナ」を実行します。
    # ここでは、2 つの Docker イメージを設定します。
    docker:
      - image: cimg/ruby:3.0.2-node # プライマリ Docker イメージです。ここでステップコマンドが実行されます。
        auth:
          username: yuyahs
          password: "@lasvegas216"  # コンテキスト/ プロジェクト UI の環境変数を参照します。
      - image: circleci/mysql:8.0.26
        auth:
          username: yuyahs
          password: "@lasvegas216"  # コンテキスト/ プロジェクト UI の環境変数を参照します。
        environment:
          MYSQL_ROOT_PASSWORD: yuya0216
          MYSQL_DATABASE: selftalk_app_test
          MYSQL_USER: yuyahs
          MYSQL_PASSWORD: yuya0216
    # Ruby/Rails 固有の環境変数をプライマリコンテナに適用します。
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/selftalk_app
    # 実行する一連のステップです。「ビルド」のステップと似たステップもあります。
    steps:
      - checkout:
         path: ~/selftalk_app
      - ruby/install-deps

      # ここでは、データベース上で実行する前に
      # セカンダリコンテナが起動することを確認します。
      - run:
      # プライマリコンテナは MYSQL ではないので、準備ができるまでスリープコマンドを実行します。
          name: MySQL が準備できるまで待機
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: データベースの作成
          command: bundle exec rake db:create
      - run:
          name: データベースのセットアップ
          command: bundle exec rake db:migrate
      - run:
          name: test
          command: bundle exec rspec
      - run:
          name: Rubocop
          command: bundle exec  rubocop --fail-level W --display-only-fail-level-offenses

  deploy:
    docker:
      - image: cimg/ruby:3.0.2-node # カスタマイズされた CircleCI Docker イメージを使用します。
        auth:
          username: yuyahs
          password: "@lasvegas216"  # コンテキスト/ プロジェクト UI の環境変数を参照します。
    working_directory: ~/selftalk_app
    steps:
      - checkout:
         path: ~/selftalk_app   # Git コードをプルダウンします。
      - ruby/install-deps # Ruby Orb を使って依存関係をインストールします。
      - add_ssh_keys:
          fingerprints: 3d:17:e1:b5:04:cf:93:1e:da:af:75:b4:a6:ea:cc:c4
      - run:
          name: 自動デプロイ
          command: bundle exec cap production deploy



workflows:
  version: 2
  build_and_test_and_deploy:     # ワークフローの名前は "build_and_test" です。
    jobs:             # このワークフローの一部として実行するジョブのリストです。
      - build         # まず、ビルドを実行します。
      - test:         # 次に、テストを実行します。
          requires:   # テストを実行するにはビルドを渡す必要があります。
            - build   # 最後に、ビルドしたジョブを実行します。
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
